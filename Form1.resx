<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>